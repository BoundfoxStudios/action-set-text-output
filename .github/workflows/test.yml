name: test

on:
  push:

jobs:
  test-string:
    runs-on: ubuntu-latest
    env:
      content: |
        # test heading

        Lorem ipsum dolor sit amet, consectetur adipisicing elit,  
        sed do eiusmod tempor incididunt ut labore et dolore magna  
        aliqua. Ut enim ad minim veniam, quis nostrud exercitation  
        ullamco laboris nisi ut aliquip ex ea commodo consequat.  
        Duis aute irure dolor in reprehenderit in voluptate velit  
        esse cillum dolore eu fugiat nulla pariatur. Excepteur sint  
        occaecat cupidatat non proident, sunt in culpa qui officia  
        deserunt mollit anim id est laborum.

    steps:
      - uses: actions/checkout@v2
      - id: expected
        env:
          text: $content
        run: |
          text="${text//'%'/'%25'}"
          text="${text//$'\n'/'%0A'}"
          text="${text//$'\r'/'%0D'}"
          echo "value=$text" >> $GITHUB_OUTPUT

      - name: test simple
        uses: ./
        id: test
        with:
          text: $content
      - name: "test simple failed"
        if: ${{ steps.expected.outputs.value != steps.test.outputs.value }}
        run: |
          echo "expected:"
          echo "${{ steps.expected.outputs.value }}"
          echo "got:"
          echo "${{ toJSON(steps.test1.outputs) }}"
          exit 1

  #############################################################################
  # TEST dep node
  #############################################################################
  test-pass:
    runs-on: ubuntu-latest
    needs: 
      - test-string
    steps:
      - run: echo "ok"

  #############################################################################
  # TEST README Example
  #############################################################################
  readme-usage:
    runs-on: ubuntu-latest
    needs: test-pass
    outputs:
      content: ${{ steps.content.outputs.value }}
    steps:
      - uses: BoundfoxStudios/action-set-text-output@v1
        id: content
        with:
          text: |
            # Set text output

            A simple composite actions to set the job output while maintaining the text format e.g. markdown format.

  readme-result:
    runs-on: ubuntu-latest
    needs: readme-usage
    steps:
      - if: ${{ !startsWith(needs.readme-usage.outputs.content, '# Set text output') }}
        run: exit 1
      - run: echo "${{ toJSON(needs.readme-usage.outputs) }}"

  #############################################################################
  # TEST main
  #############################################################################
  main-test:
    runs-on: ubuntu-latest
    needs: test-pass
    outputs:
      content: ${{ steps.content.outputs.value }}
    steps:
      - uses: BoundfoxStudios/action-set-text-output@main
        id: content
        with:
          text: |
            # Set text output

            A simple composite actions to set the job output while maintaining the text format e.g. markdown format.

  main-result:
    runs-on: ubuntu-latest
    needs: main-test
    if: always()
    steps:
      - if: startsWith(needs.main-test.outputs.content, '# Set text output')
        run: exit 0
      - if: ${{ !startsWith(needs.main-test.outputs.content, '# Set text output') }}
        run: exit 1

  #############################################################################
  # TEST v1
  #############################################################################
  v1-test:
    runs-on: ubuntu-latest
    needs: test-pass
    outputs:
      content: ${{ steps.content.outputs.value }}
    steps:
      - uses: BoundfoxStudios/action-set-text-output@v1
        id: content
        with:
          text: |
            # Set text output

            A simple composite actions to set the job output
            while maintaining the text format e.g. markdown format.

  v1-result:
    runs-on: ubuntu-latest
    needs: v1-test
    if: always()
    steps:
      - if: startsWith(needs.v1-test.outputs.content, '# Set text output')
        run: exit 0
      - if: ${{ !startsWith(needs.v1-test.outputs.content, '# Set text output') }}
        run: exit 1
